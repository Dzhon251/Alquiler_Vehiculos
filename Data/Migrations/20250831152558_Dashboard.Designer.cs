// <auto-generated />
using System;
using Alquiler_Vehiculos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alquiler_Vehiculos.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250831152558_Dashboard")]
    partial class Dashboard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.AlquilerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteModelId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo_Alquiler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DashboardViewModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total_Alquiler")
                        .HasColumnType("float");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehiculoModelId")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClienteModelId");

                    b.HasIndex("DashboardViewModelId");

                    b.HasIndex("VehiculoModelId");

                    b.ToTable("Alquilados");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.ClienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.VehiculoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disponible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio_Diario")
                        .HasColumnType("float");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.VehiculosAlquiladosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlquilerModelId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehiculoModelId")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AlquilerModelId");

                    b.HasIndex("VehiculoModelId");

                    b.ToTable("VehiculosAlquilados");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.ViewModel.DashboardViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Clientes")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero_Alquiler")
                        .HasColumnType("int");

                    b.Property<double>("Total_Alquilados")
                        .HasColumnType("float");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vehiculos")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.AlquilerModel", b =>
                {
                    b.HasOne("Alquiler_Vehiculos.Models.Entity.ClienteModel", "ClientesModel")
                        .WithMany()
                        .HasForeignKey("ClienteModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alquiler_Vehiculos.Models.ViewModel.DashboardViewModel", null)
                        .WithMany("UltimosAlquilados")
                        .HasForeignKey("DashboardViewModelId");

                    b.HasOne("Alquiler_Vehiculos.Models.Entity.VehiculoModel", "VehiculoModel")
                        .WithMany()
                        .HasForeignKey("VehiculoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientesModel");

                    b.Navigation("VehiculoModel");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.Entity.VehiculosAlquiladosModel", b =>
                {
                    b.HasOne("Alquiler_Vehiculos.Models.Entity.AlquilerModel", "AlquilerModel")
                        .WithMany()
                        .HasForeignKey("AlquilerModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alquiler_Vehiculos.Models.Entity.VehiculoModel", "VehiculoModel")
                        .WithMany()
                        .HasForeignKey("VehiculoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlquilerModel");

                    b.Navigation("VehiculoModel");
                });

            modelBuilder.Entity("Alquiler_Vehiculos.Models.ViewModel.DashboardViewModel", b =>
                {
                    b.Navigation("UltimosAlquilados");
                });
#pragma warning restore 612, 618
        }
    }
}
